{"version":3,"sources":["Components/Layout/SigninLink.js","Redux/Actions/AuthActions.js","Components/Layout/SignupLink.js","Components/Layout/Navbar.js","Components/Dashboard/Notification.js","Components/Projects/ProjectSummary.js","Components/Projects/ProjectList.js","Components/Dashboard/Dashboard.js","Components/Projects/ProjectDetails.js","Components/Auth/Signin.js","Components/Auth/Signup.js","Components/Projects/CreateProject.js","Redux/Actions/ProjectActions.js","App.js","serviceWorker.js","Redux/Reducers/AuthReducer.js","Redux/Reducers/ProjectReducer.js","Redux/Reducers/RootReducer.js","fbconfig.js","index.js"],"names":["SigninLink","react_default","a","createElement","className","react_router_dom","to","onClick","this","props","logout","Component","connect","dispatch","getState","_ref2","getFirebase","auth","signOut","then","type","catch","err","SignupLink","Navbar","links","uid","Layout_SigninLink","SignupLink_SignupLink","state","firebaseReducer","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","createdAt","calendar","ProjectList","projects","Projects_ProjectSummary","Dashboard","Projects_ProjectList","Notification_Notification","react_router","compose","firestoreReducer","ordered","firestoreConnect","collection","orderBy","limit","ProjectDetails","ownProps","match","params","data","Signin","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signin","isLoading","buttonText","onSubmit","htmlFor","onChange","authError","authReducer","credentials","signInWithEmailAndPassword","Signup","firstName","lastName","signup","_ref3","getFirestore","firebase","firestore","createUserWithEmailAndPassword","res","doc","set","lastname","CreateProject","uploadProject","add","objectSpread","authorFirstName","authorLastName","authorId","Date","createProject","App","Layout_Navbar","exact","path","component","Boolean","window","location","hostname","initState","AuthReducer","arguments","length","undefined","console","log","ProjectReducer","action","rootReducer","combineReducers","projectReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","RootReducer","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","attachAuthIsReady","firebaseStateName","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9507d8b0.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport {logout} from '../../Redux/Actions/AuthActions';\n class SigninLink extends Component {\n    render() {\n        return (\n            <ul className=\"right\">\n                <li><NavLink to=\"/create\">New Project</NavLink></li>\n                <li><NavLink onClick={this.props.logout}>Log out</NavLink></li>\n                <li><NavLink to=\"/\" className=\"btn btn-floating blue lighten-1\">Dr.AI</NavLink></li>\n            </ul>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        logout:()=>{dispatch(logout())}\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SigninLink);","export const signin = (credentials)=>{\n    return (dispatch,getState,{getFirebase})=>{\n        dispatch({type:\"startLoading\"})\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type:\"loginSuccess\"})\n            dispatch({type:\"stopLoading\"})\n        }).catch((err)=>{\n            dispatch({type:\"loginFailed\",err})\n            dispatch({type:\"stopLoading\"})\n        })\n    }\n}\n\nexport const logout = ()=>{\n    return (dispatch,getState,{getFirebase})=>{\n        const firebase = getFirebase()\n        firebase.auth().signOut()\n        .then(()=>{\n            dispatch({type:\"logoutSuccess\"})\n        })\n        .catch((err)=>{\n            dispatch({type:\"logoutFailed\"})\n        })\n    }\n}\n\nexport const signup = (user)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        dispatch({type:\"startLoading\"})\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            user.email,\n            user.password\n        ).then((res)=>{\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName:user.firstName,\n                lastname:user.lastName\n            })\n        }).then(()=>{\n            dispatch({type:\"signupSucesss\"})\n            dispatch({type:\"stopLoading\"})\n\n        }).catch((err)=>{\n            dispatch({type:\"signupFailed\"})\n            dispatch({type:\"stopLoading\"})\n\n        })\n    }\n}","import React, { Component } from 'react'\nimport {NavLink} from 'react-router-dom';\nexport default class SignupLink extends Component {\n    render() {\n        return (\n            <ul className=\"right\">\n                <li><NavLink to=\"/signup\">Sign up</NavLink></li>\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\n            </ul>\n        )\n    }\n}\n","import {Link} from 'react-router-dom';\n\nimport React, { Component } from 'react'\nimport SigninLink from './SigninLink';\nimport SignupLink from './SignupLink';\nimport {connect} from 'react-redux';\n\nclass Navbar extends Component {\n    render() {\n        const {auth} = this.props;\n        const links = auth.uid?<SigninLink />:<SignupLink />\n        return (\n            <nav>\n                <div className=\"nav-wrapper grey darken-3\">\n                    <div className=\"container\">\n                        <Link to=\"/\" className=\"brand-logo\">Doctor AI</Link>\n                        {links}\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        auth : state.firebaseReducer.auth\n    }\n}\n\nexport default connect(mapStateToProps,null)(Navbar);","import React, { Component } from 'react'\nimport moment from 'moment'\nexport default class Notification extends Component {\n    render() {\n        const {notifications} = this.props;\n        return (\n            <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                <span className=\"card-title\">Notifications</span>\n                <ul className=\"online-users\">\n                    { notifications && notifications.map(item =>{\n                    return <li key={item.id}>\n                        <span className=\"pink-text\">{item.user} </span>\n                        <span>{item.content}</span>\n                        <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n                    </li>\n                    })}\n                </ul>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport moment from 'moment';\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{project.title}</span>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom';\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n            <Link to={\"/project/\"+project.id} key={project.id}>\n          <ProjectSummary project={project}  />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notification';\nimport ProjectList from '../Projects/ProjectList';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport {Redirect} from 'react-router-dom'\nclass Dashboard extends Component {\n    render() {\n        if (!this.props.auth.uid) return (<Redirect to=\"/signin\"/>)\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                <div className=\"col s12 m6\">\n                    <ProjectList projects={this.props.projects}/>\n                </div>\n                <div className=\"col s12 m5 offset-m1\">\n                    <Notifications notifications={this.props.notifications}/>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n      projects: state.firestoreReducer.ordered.projects,\n      auth:state.firebaseReducer.auth,\n      notifications: state.firestoreReducer.ordered.notifications\n    }\n  }\n  \n  export default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'projects' ,orderBy:[\"createdAt\",\"desc\"]},\n      { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ])\n  )(Dashboard)","import React,{Component} from 'react'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {Redirect} from 'react-router-dom';\nclass ProjectDetails extends Component{\n    render(){\n        if (!this.props.auth.uid) return (<Redirect to=\"/signin\"/>)\n        const {project} = this.props\n        if(project){\n            return(\n                <div className=\"container section project-details\">\n                      <div className=\"card z-depth-0\">\n                        <div className=\"card-content\">\n                          <span className=\"card-title\">{project.title}</span>\n                          <p>{project.content}</p>\n                        </div>\n                        <div className=\"card-action grey lighten-4 grey-text\">\n                          <div>2nd September, 2am</div>\n                        </div>\n                      </div>\n                    </div>\n            )\n        }else{\n            return(\n                null\n            )\n        }\n       \n    }\n}\n\nconst mapStateToProps = (state,ownProps)=>{\n    const id = ownProps.match.params.id;\n    const projects = state.firestoreReducer.data.projects;\n    const project = projects?projects[id]:null;\n    return{\n        project:project,\n        auth:state.firebaseReducer.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:\"projects\"}\n    ])\n)(ProjectDetails);","import React, { Component } from 'react'\nimport { signin } from '../../Redux/Actions/AuthActions';\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nclass Signin extends Component {\n    state = {\n        email:\"\",\n        password :\"\"\n    }\n\n    handleChange = (e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        this.props.signin(this.state)\n    }\n    render() {\n        const {isLoading} = this.props;\n        if (this.props.auth.uid)return (\n            <Redirect to=\"/\" />\n        )\n        const buttonText = isLoading?\"Loading..\":\"Login\"\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">{buttonText}</button>\n                    </div>\n                </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        authError : state.authReducer.authError,\n        auth:state.firebaseReducer.auth,\n        isLoading:state.authReducer.isLoading\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        signin:(credentials)=>dispatch(signin(credentials))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Signin);","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signup} from '../../Redux/Actions/AuthActions'\nclass Signup extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n      }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signup(this.state)\n    }\n    render() {\n        const {auth} = this.props;\n        const buttonText = this.props.isLoading?\"Loading..\":\"Sign Up\"\n        if(auth.uid) return (<Redirect to=\"/\" />)\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" id='firstName' onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id='lastName' onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id='email' onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id='password' onChange={this.handleChange} />\n                </div>\n                \n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">{buttonText}</button>\n                </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        auth : state.firebaseReducer.auth,\n        isLoading:state.authReducer.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        signup : (user)=>{dispatch(signup(user))}\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport {createProject} from '../../Redux/Actions/ProjectActions';\nimport {Redirect} from 'react-router-dom'\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.uploadProject(this.state)\n    }\n    render() {\n        if (!this.props.auth.uid) return (<Redirect to=\"/signin\"/>)\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n                <div className=\"input-field\">\n                    <input type=\"text\" id='title' onChange={this.handleChange} />\n                    <label htmlFor=\"title\">Project Title</label>\n                </div>\n                <div className=\"input-field\">\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    <label htmlFor=\"content\">Project Content</label>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1\">Create</button>\n                </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        uploadProject : (project) => {dispatch(createProject(project))},\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        auth:state.firebaseReducer.auth\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);","export const createProject = (project)=>{\n    return(dispatch,getState,{getFirestore})=>{\n        const firestore = getFirestore();\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: 'panther',\n      authorLastName: 'official',\n      authorId: 12345,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'createProject' ,project});\n    }).catch(err => {\n      dispatch({ type: 'createProjectError' }, err);\n    });\n    }\n}","import React from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Navbar from '../src/Components/Layout/Navbar';\nimport Dashboard from '../src/Components/Dashboard/Dashboard';\nimport ProjectDetails from '../src/Components//Projects/ProjectDetails';\nimport Signin from './Components/Auth/Signin';\nimport Signup from './Components/Auth/Signup';\nimport CreateProject from './Components/Projects/CreateProject';\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard}/>\n        <Route path=\"/project/:id\" component={ProjectDetails}/>\n        <Route  path=\"/signin\" component={Signin}/>\n        <Route path=\"/signup\" component={Signup}/>\n        <Route path=\"/create\" component={CreateProject}/>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError:null,\n    isLoading:false\n}\n\nconst AuthReducer = (state=initState,action)=>{\n    switch(action.type){\n        case \"loginSuccess\":\n            return {\n                ...state,\n                authError:\"login Success\"\n            }\n        case \"loginFailed\":\n            return {\n                ...state,\n                authError:\"Login Failed\"\n            }\n        case \"logoutSuccess\":\n            console.log(\"logout success\")\n            return state;\n\n        case \"logoutFailed\":\n            console.log(\"logout failed\")\n            return state;\n\n        case \"startLoading\":\n            return {\n                ...state,\n                isLoading:true\n            }\n        \n        case \"stopLoading\":\n            return {\n                ...state,\n                isLoading:false\n            }\n        \n        case \"signupSuccess\":\n            console.log(\"signupSuccess\")\n            return state;\n\n        case \"signupFailed\":\n            console.log(\"signup failed\")\n            return state;\n        default:\n            return state\n    }\n}\n\nexport default AuthReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n}\n\nconst ProjectReducer = (state=initState,action)=>{\n    switch(action.type){\n        case \"createProject\":\n            console.log(action.project);\n            return state;\n        case \"createProjectError\":\n            console.log(action.err);\n            return state\n        default:\n            return state\n    }\n}\n\nexport default ProjectReducer;","import {combineReducers} from 'redux';\nimport AuthReducer from './AuthReducer';\nimport ProjectReducer from './ProjectReducer';\nimport {firestoreReducer} from \"redux-firestore\"\nimport {firebaseReducer} from 'react-redux-firebase'\nconst rootReducer = combineReducers({\n    authReducer:AuthReducer,\n    projectReducer:ProjectReducer,\n    firestoreReducer:firestoreReducer,\n    firebaseReducer:firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar config = {\n    apiKey: \"AIzaSyD3Zq1cBlpHKqVrYDVssYhRrx_XW6nkpvE\",\n    authDomain: \"dog-ai-8ec6d.firebaseapp.com\",\n    databaseURL: \"https://dog-ai-8ec6d.firebaseio.com\",\n    projectId: \"dog-ai-8ec6d\",\n    storageBucket: \"dog-ai-8ec6d.appspot.com\",\n    messagingSenderId: \"714079058730\",\n    appId: \"1:714079058730:web:041976d177f7aa98\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport RootReducer from '../src/Redux/Reducers/RootReducer';\nimport thunk from 'redux-thunk';\nimport fbConfig from './fbconfig';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\n\nconst store = createStore(RootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig,{attachAuthIsReady:true, firebaseStateName: 'firebaseReducer'  }), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister(); \n})\n"],"sourceRoot":""}